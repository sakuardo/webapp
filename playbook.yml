---
- hosts: all
  become: yes
  vars:
    server_name: "{{ ansible_default_ipv4.address }}"
    document_root: /usr/share/nginx/html
  roles:
  - ansible-hardening  
  tasks:

    - name: Add grafana repository
      yum_repository:
        name: grafana
        description: grafana repo
        baseurl: https://packages.grafana.com/oss/rpm
        gpgcheck: yes
        gpgkey: https://packages.grafana.com/gpg.key
        sslverify: yes
        sslcacert: /etc/pki/tls/certs/ca-bundle.crt
        enabled: yes

    - name: Install Grafana
      yum:
        name: grafana
        state: latest
          
    - name: Allow traffic in default zone for Grafana port 3000
      firewalld:
        port: 3000/tcp
        permanent: yes
        state: enabled
        immediate: yes

    - name: Install Nginx
      yum:
        name: nginx
        state: latest

    - name: Allow traffic in default zone for http service
      firewalld:
        service: http
        permanent: yes
        state: enabled
        immediate: yes

    - name: Allow traffic in default zone for https service
      firewalld:
        service: https
        permanent: yes
        state: enabled
        immediate: yes

    - name: Allow SELinux for Grafana and Nginx
      command: /usr/sbin/setsebool -P httpd_can_network_connect 1

    - name: Copy nginx.conf with owner and permissions
      copy:
        src: files/nginx.conf
        dest: /etc/nginx/nginx.conf
        owner: root
        group: root
        mode: '0644'

    - name: Copy grafana.ini with owner and permissions
      copy:
        src: files/grafana.ini
        dest: /etc/grafana/grafana.ini
        owner: root
        group: grafana
        mode: '0640'

    - name: Create /app directory
      file:
        path: /usr/share/nginx/html/app
        state: directory
    
    - name: Copy /app files in place for counter
      copy:
        src: files/app/index.html
        dest: /usr/share/nginx/html/app/index.html
        owner: root
        group: root
        mode: '0644'

    - name: Allow Nginx to access  /app in SELinux 
      command: /sbin/semanage fcontext -a -t httpd_sys_content_t '/usr/share/nginx/html/app(/.*)?'

    - name: Relabel /usr/share/nginx/html/app for SElinx to work after reboot
      command: /sbin/restorecon -Rv /usr/share/nginx/html/app

    #- name: Download Prometheus with check (sha256)
    #  get_url:
    #    url: https://github.com/prometheus/prometheus/releases/download/v2.35.0/prometheus-2.35.0.linux-amd64.tar.gz
    #    dest: /root/prometheus-2.35.0.linux-amd64.tar.gz
    #    checksum: sha256:e4546960688d1c85530ec3a93e109d15b540f3251e1f4736d0d9735e1e857faf
    
    - name: Ensure group "Prometheus" exists
      group:
        name: prometheus
        gid: 9090
        state: present

    - name: Add the user 'prometheus' with a specific uid and a primary group of 'prometheus'
      user:
        name: prometheus
        comment: prometheus user
        uid: 9090
        group: prometheus

    - name: Create /etc/prometheus directory
      file:
        path: /etc/prometheus
        state: directory
        owner: prometheus
        group: prometheus

    - name: Create /var/lib/prometheus directory
      file:
        path: /var/lib/prometheus
        state: directory
        owner: prometheus
        group: prometheus

    - name: Extract prometheus.tgz into /var/lib/prometheus
      unarchive:
        src: files/prometheus-2.35.0.linux-amd64.tar.gz
        dest: /var/lib/prometheus

    - name: Recursively change ownership of a Prometheus config files
      file:
        path: /var/lib/prometheus
        state: directory
        recurse: yes
        owner: prometheus
        group: prometheus

    - name: Copy prometheus configuration prometheus.yml 
      copy:
        src: files/prometheus.yml 
        dest: /etc/prometheus/prometheus.yml
        owner: prometheus
        group: prometheus
        mode: '0644'
    
    - name: Create symbolic links for Prometheus commands at /usr/bin
      command: cp -s /var/lib/prometheus/prometheus-2.35.0.linux-amd64/prometheus /usr/bin

    - name: Create symbolic links for Prometheus commands at /usr/bin
      command: cp -s /var/lib/prometheus/prometheus-2.35.0.linux-amd64/promtool /usr/bin  

    - name: Allow traffic in default zone for Prometheus port 9090
      firewalld:
        port: 9090/tcp
        permanent: yes
        state: enabled
        immediate: yes

    - name: Copy prometheus.service  
      copy:
        src: files/prometheus.service
        dest: /usr/lib/systemd/system/prometheus.service
        owner: root
        group: root
        mode: '0644'

    - name: set SELinux permissions on prometheus binaries
      sefcontext:
        target: /var/lib/prometheus/prometheus-2.35.0.linux-amd64/prometheus
        setype: bin_t

    - name: reload SELinux policy to ensure that prometheus is executable
      command: /sbin/restorecon -Rv /var/lib/prometheus/

    - name: Restart Grafana
      service:
        name: grafana-server
        enabled: yes
        state: restarted 

    - name: Restart Prometheus
      service:
        name: prometheus.service
        enabled: yes
        state: restarted  

    - name: Restart Nginx
      service:
        name: nginx
        enabled: yes
        state: restarted